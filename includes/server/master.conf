root /opt/mesosphere/active/dcos-ui/usr;

location = /exhibitor {
    rewrite ^/exhibitor$ $scheme://$http_host/exhibitor/ permanent;
}

location /dcos-metadata/dcos-version.json {
    # Allow non-authed access for the UI.
    alias /opt/mesosphere/active/dcos-metadata/etc/dcos-version.json;
}

location ~ ^/(slave|agent)/(?<agentid>[0-9a-zA-Z-]+)(?<url>.*)$ {
    access_by_lua_block {
        shim.access_agent_endpoint();
    }
    set $agentaddr '';

    more_clear_input_headers Accept-Encoding;
    rewrite ^/(slave|agent)/[0-9a-zA-Z-]+/.*$ $url break;
    rewrite_by_lua_file conf/lib/agent.lua;

    proxy_set_header Host $http_host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;

    proxy_pass $agentaddr;
}

location /acs/api/v1 {
    # Enforce access restriction to Auth API.
    access_by_lua_block {
        shim.access_acsapi_endpoint();
    }
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header Host $http_host;
    proxy_pass http://iam;
    # Instruct user agent to not cache the response.
    # Ref: http://stackoverflow.com/a/2068407/145400
    add_header Cache-Control "no-cache, no-store, must-revalidate";
    add_header Pragma no-cache;
    add_header Expires 0;
}

location = /mesos {
    rewrite ^/mesos$ $scheme://$http_host/mesos/ permanent;
}

location /navstar/lashup/key {
    access_by_lua_block {
        shim.access_lashupkey_endpoint();
    }
    proxy_set_header Host $http_host;
    proxy_pass http://navstar/lashup/key;
}

location ~ ^/service/(?<serviceid>[0-9a-zA-Z-.]+)$ {
    # Append slash and 301-redirect.
    rewrite ^/service/(.*)$ /service/$1/ permanent;
}

location = /marathon {
    rewrite ^/marathon$ $scheme://$http_host/marathon/ last;
}

location /marathon/ {
    rewrite ^/marathon/(.*)$ /service/marathon/$1 last;
}

location ~ ^/service/(?<serviceid>[0-9a-zA-Z-.]+)/(?<url>.*) {
    set $serviceurl '';
    set $servicescheme '';

    access_by_lua_block {
        shim.access_service_endpoint();
    }

    more_clear_input_headers Accept-Encoding;
    rewrite ^/service/[0-9a-zA-Z-.]+/?.*$ /$url break;
    rewrite_by_lua_file conf/lib/service.lua;

    proxy_set_header Host $http_host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;

    proxy_pass $serviceurl;
    proxy_redirect $servicescheme://$host/service/$serviceid/ /service/$serviceid/;
    proxy_redirect $servicescheme://$host/ /service/$serviceid/;
    proxy_redirect / /service/$serviceid/;

    # Disable buffering to allow real-time protocols
    proxy_buffering off;

    # Support web sockets and SPDY upgrades
    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection "upgrade";
}

location /metadata {
    access_by_lua_block {
        shim.access_metadata_endpoint();
    }
    content_by_lua_file conf/lib/metadata.lua;
}

location /pkgpanda/active.buildinfo.full.json {
    access_by_lua_block {
        shim.access_metadata_endpoint();
    }
    add_header Cache-Control "no-cache";
    alias /opt/mesosphere/active.buildinfo.full.json;
}

location /dcos-history-service/ {
    access_by_lua_block {
        shim.access_historyservice_endpoint();
    }
    proxy_pass http://dcos_history_service/;
}

location = /mesos_dns {
    rewrite ^/mesos_dns$ $scheme://$http_host/mesos_dns/ permanent;
}

location /mesos_dns/ {
    access_by_lua_block {
        shim.access_mesosdns_endpoint();
    }
    proxy_set_header Host $http_host;
    proxy_pass http://mesos_dns/;
}

location /system/health/v1 {
    access_by_lua_block {
        shim.access_systemhealth_endpoint();
    }
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header Host $host;
    proxy_pass http://dddt;
}

location /pkgpanda/ {
    access_by_lua_block {
        shim.access_pkgpanda_endpoint();
    }
    proxy_set_header Host $http_host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;

    proxy_pass http://pkgpanda/;
    proxy_redirect http://$http_host/ /pkgpanda/;
}
